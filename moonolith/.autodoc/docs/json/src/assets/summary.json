{
  "folderName": "assets",
  "folderPath": ".autodoc/docs/json/src/assets",
  "url": "https://github.com/LaGuerrePiece/moonolith/tree/master/.autodoc/docs/json/src/assets",
  "files": [
    {
      "fileName": "sounds.js",
      "filePath": "src/assets/sounds.js",
      "url": "https://github.com/LaGuerrePiece/moonolith/blob/master/src/assets/sounds.js",
      "summary": "This code is responsible for managing the audio functionality in the Moonolith project. It handles the playing, pausing, and muting of two specific audio files, `theEndOfTheWorld.mp3` and `rumble.mp3`, as well as any other audio file specified by name.\n\nThe `toggleMute` function switches the mute state. If the audio is currently muted, it will play the music; if not, it will pause both the music and the rumble sound.\n\nThe `playSound` function plays a specified sound, but only if the system is not muted and a certain time limit has passed since the last sound was played. This prevents rapid, overlapping sound playback.\n\nThe `toggleMusic` function switches the music between playing and paused states, while `playMusic` simply plays the music.\n\nThe `stopSound` function pauses a specified sound.\n\nThe `toggleRumble` function switches the rumble sound between playing and fading out, unless the system is muted. The fading out is handled by the `fadeAudio` function, which gradually reduces the volume of the sound over a period of 5 seconds before pausing it.\n\nHere's an example of how to use these functions:\n\n```javascript\nimport { toggleMute, playSound, stopSound } from './audioManager';\n\n// Mute or unmute all sounds\ntoggleMute();\n\n// Play a sound named 'explosion', but only if at least 1000ms have passed since the last sound was played\nplaySound('explosion', 1000);\n\n// Stop the 'explosion' sound\nstopSound('explosion');\n```\n\nThis audio management functionality could be used in a variety of ways within the Moonolith project, such as providing background music, sound effects for user actions, or auditory feedback for system events.",
      "questions": "",
      "checksum": "7f67cc44937729b32a188760fc9fc160"
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/src/assets` folder in the Moonolith project contains the `sounds.js` file which is responsible for managing the audio functionality of the project. This includes playing, pausing, and muting audio files, specifically `theEndOfTheWorld.mp3` and `rumble.mp3`, as well as any other audio file specified by name.\n\nThe `sounds.js` file contains several functions that control the audio behavior:\n\n- `toggleMute`: Switches the mute state. If the audio is currently muted, it will play the music; if not, it will pause both the music and the rumble sound.\n- `playSound`: Plays a specified sound, but only if the system is not muted and a certain time limit has passed since the last sound was played. This prevents rapid, overlapping sound playback.\n- `toggleMusic`: Switches the music between playing and paused states.\n- `playMusic`: Simply plays the music.\n- `stopSound`: Pauses a specified sound.\n- `toggleRumble`: Switches the rumble sound between playing and fading out, unless the system is muted. The fading out is handled by the `fadeAudio` function, which gradually reduces the volume of the sound over a period of 5 seconds before pausing it.\n\nHere's an example of how to use these functions:\n\n```javascript\nimport { toggleMute, playSound, stopSound } from './audioManager';\n\n// Mute or unmute all sounds\ntoggleMute();\n\n// Play a sound named 'explosion', but only if at least 1000ms have passed since the last sound was played\nplaySound('explosion', 1000);\n\n// Stop the 'explosion' sound\nstopSound('explosion');\n```\n\nThis audio management functionality could be used in a variety of ways within the project, such as providing background music, sound effects for user actions, or auditory feedback for system events. It is a crucial part of the user experience, enhancing the interactivity and responsiveness of the project.",
  "questions": "",
  "checksum": "fe8e6cd806b07a35866d57847eb5dfb5"
}