{
  "fileName": "mobileControls.js",
  "filePath": "src/controls/mobileControls.js",
  "url": "https://github.com/LaGuerrePiece/moonolith/src/controls/mobileControls.js",
  "summary": "The code provided is a module that handles touch events on a mobile device for the Moonolith project. It exports a function called `mobileEventListener` that sets up event listeners for touch events and defines the behavior for each event.\n\nThe `mobileEventListener` function uses the Hammer.js library to handle touch events on the `canvas` element. It enables the `pinch` gesture and sets up an event handler for the `pinch` event. When the `pinch` event is triggered, the function checks if the `panMode` variable is true. If it is, it adjusts the zoom level based on the scale of the pinch gesture. If the scale is greater than 1, it calls the `increaseZoom` function with a zoom increment of 0.02. If the scale is less than 1, it calls the `decreaseZoom` function with a zoom increment of 0.02.\n\nThe function also sets up event handlers for the `tap`, `touchmove`, `touchend`, and `touchstart` events. When the `tap` event is triggered, the function calls the `touchManager` function, passing the event object as an argument. The `touchManager` function handles the logic for different types of touch events.\n\nIf the `tap` event is triggered and the `FAQ` variable is truthy, the function calls the `clickManager` function with the event object as an argument. Otherwise, it checks the position of the touch event relative to various elements on the screen using the `isInSquare` and `isInCircle` functions from the `conversions` module. Depending on the position of the touch event, it performs different actions such as toggling the `panMode`, opening a URL in a new tab, or displaying the FAQ.\n\nIf the `panMode` is true, the `touchPan` function is called to handle touch events for panning. It keeps track of the previous touch coordinates and calculates the change in coordinates when the touch moves. It then calls the `changeViewPos` function to update the view position based on the change in coordinates.\n\nIf the `panMode` is false, the `touchDraw` function is called to handle touch events for drawing. It extracts the touch coordinates from the event object and checks if the touch is within the bounds of the `palette` element. If it is, it returns early. Otherwise, it calls the `startUsingTool` function to start using the selected drawing tool.\n\nThe module also exports a function called `setPanMode` that takes a boolean argument `mode`. If the `mode` is the same as the current `panMode`, the function returns early. Otherwise, it calls the `togglePanMode` function to toggle the `panMode` and update the display of certain elements in the GUI.\n\nOverall, this module provides the necessary event handling logic for touch events on a mobile device in the Moonolith project. It allows users to interact with the canvas, toggle between panning and drawing modes, and perform various actions based on the position of the touch events.",
  "questions": "**Question 1:** What is the purpose of the `mobileEventListener` function?\n    \n**Answer:** The `mobileEventListener` function is responsible for setting up event listeners for touch and pinch gestures on a mobile device.\n\n**Question 2:** What does the `togglePanMode` function do?\n    \n**Answer:** The `togglePanMode` function toggles the `panMode` variable and updates the display of certain elements in the `GUICatalog` object.\n\n**Question 3:** What is the purpose of the `touchManager` function?\n    \n**Answer:** The `touchManager` function handles touch events and performs different actions based on the type of touch event and the position of the touch on the screen."
}