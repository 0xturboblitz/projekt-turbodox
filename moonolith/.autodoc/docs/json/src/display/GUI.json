{
  "fileName": "GUI.js",
  "filePath": "src/display/GUI.js",
  "url": "https://github.com/LaGuerrePiece/moonolith/src/display/GUI.js",
  "summary": "The code provided is a module that handles the display and management of the GUI (Graphical User Interface) elements in the Moonolith project. The module exports several functions and objects that are used to control and update the GUI.\n\nThe `paletteCatalog` object contains a list of different palettes, each represented by a key-value pair. The keys represent the name of the palette, and the values contain the file name of the palette image. Similarly, the `GUICatalog` object contains a list of different GUI elements, each represented by a key-value pair. The keys represent the name of the GUI element, and the values contain the file name of the GUI image, as well as additional properties such as type and display status.\n\nThe `displayShareScreen` function sets the `display` property of the `share` GUI element to true, indicating that the share screen should be displayed.\n\nThe `displayPalette` function is responsible for displaying the palette GUI element. It sets the `display` property of the `mobileDraw` GUI element to true if the device type is 'mobile'. It also sets the `display` property of the `palette`, `selectorA`, and `selectorB` GUI elements based on the device type and pan mode.\n\nThe `updatePalette` function updates the GUI elements related to the palette based on the current scale factor and tool. It sets the `img` property of the `palette`, `selectorA`, `selectorB`, `mobileDraw`, and `mobileMove` GUI elements to the corresponding palette images based on the scale factor and tool. It also sets the `info` property of the `palette` GUI element based on the scale factor.\n\nThe `updateGUICatalog` function updates the position of the GUI elements based on the current canvas size and other factors. It iterates over the `GUICatalog` object and updates the `x` and `y` properties of the GUI elements based on their type and other conditions.\n\nThe `loadGUI` function loads the palette and GUI images by creating new `Image` objects and setting their `src` properties to the corresponding file paths. It also sets the `loaded` property of each GUI element to true when the image is loaded.\n\nThe `drawGUI` function is responsible for drawing the GUI elements on the canvas. It iterates over the `GUICatalog` object and uses the `ctx.drawImage` method to draw the GUI elements that have their `display` property set to true and are loaded.\n\nOverall, this code module provides the functionality to display and manage the GUI elements in the Moonolith project. It allows for the dynamic updating of the GUI based on the device type, scale factor, and other conditions.",
  "questions": "1. What is the purpose of the `paletteCatalog` object?\n- The `paletteCatalog` object stores information about different palettes and their corresponding file names.\n\n2. What is the purpose of the `updatePalette` function?\n- The `updatePalette` function updates the images and information in the `GUICatalog` object based on the current scale factor and tool.\n\n3. What is the purpose of the `loadGUI` function?\n- The `loadGUI` function loads the images for the palettes and GUI layers from the specified file paths."
}